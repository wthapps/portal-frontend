{"version":3,"file":"/home/phat/SourceCode/portal-frontend/tools/utils/seed/template_locals.ts","sources":["/home/phat/SourceCode/portal-frontend/tools/utils/seed/template_locals.ts"],"names":[],"mappings":";AAAA,sBAAqB,OAAO,CAAC,CAAA;AAC7B,IAAY,MAAM,WAAM,cAAc,CAAC,CAAA;AAMvC;IACE,IAAM,aAAa,GAAG,YAAI,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC;IAClD,IAAM,SAAS,GAAG,MAAM,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,aAAa,CAAC,CAAC;IAE9E,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACf,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAChD,CAAC;IAED,IAAM,MAAM,GAAG;QACb,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;KACtC,CAAC;IAEF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACvC,CAAC;AAbe,sBAAc,iBAa7B,CAAA","sourcesContent":["import { argv } from 'yargs';\nimport * as CONFIG from '../../config';\n\n/**\n * Returns the project configuration (consisting of the base configuration provided by seed.config.ts and the additional\n * project specific overrides as defined in project.config.ts)\n */\nexport function templateLocals() {\n  const configEnvName = argv['config-env'] || 'dev';\n  const configEnv = CONFIG.getPluginConfig('environment-config')[configEnvName];\n\n  if (!configEnv) {\n    throw new Error('Invalid configuration name');\n  }\n\n  const config = {\n    ENV_CONFIG: JSON.stringify(configEnv)\n  };\n\n  return Object.assign(config, CONFIG);\n}\n"]}