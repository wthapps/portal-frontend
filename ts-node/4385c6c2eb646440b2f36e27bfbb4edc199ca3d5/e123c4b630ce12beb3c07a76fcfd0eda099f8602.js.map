{"version":3,"file":"/home/phat/SourceCode/portal-frontend/tools/utils/seed/tsproject.ts","sources":["/home/phat/SourceCode/portal-frontend/tools/utils/seed/tsproject.ts"],"names":[],"mappings":";AAAA,IAAY,eAAe,WAAM,mBAAmB,CAAC,CAAA;AAErD,IAAM,OAAO,GAAQ,eAAe,EAAE,CAAC;AAEvC,IAAI,UAAU,GAAQ,EAAE,CAAC;AAMzB,uBAA8B,OAAoB;IAApB,uBAAoB,GAApB,YAAoB;IAChD,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC1C,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YACzB,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC;SAClC,EAAE,OAAO,CAAC,CAAC;QACZ,UAAU,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IACtF,CAAC;IACD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AACjC,CAAC;AATe,qBAAa,gBAS5B,CAAA","sourcesContent":["import * as gulpLoadPlugins from 'gulp-load-plugins';\n\nconst plugins = <any>gulpLoadPlugins();\n\nlet tsProjects: any = {};\n\n/**\n * Creates a TypeScript project with the given options using the gulp typescript plugin.\n * @param {Object} options - The additional options for the project configuration.\n */\nexport function makeTsProject(options: Object = {}) {\n  let optionsHash = JSON.stringify(options);\n  if (!tsProjects[optionsHash]) {\n    let config = Object.assign({\n      typescript: require('typescript')\n    }, options);\n    tsProjects[optionsHash] = plugins.typescript.createProject('tsconfig.json', config);\n  }\n  return tsProjects[optionsHash];\n}\n"]}