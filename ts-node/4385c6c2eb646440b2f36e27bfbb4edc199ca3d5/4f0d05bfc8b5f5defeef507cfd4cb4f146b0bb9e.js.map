{"version":3,"file":"/home/phat/SourceCode/portal-frontend/tools/tasks/seed/build.assets.dev.ts","sources":["/home/phat/SourceCode/portal-frontend/tools/tasks/seed/build.assets.dev.ts"],"names":[],"mappings":";AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,qBAAqB,MAAM,CAAC,CAAA;AAE5B,uBAA8C,cAAc,CAAC,CAAA;AAM7D,iBAAS;IACP,IAAI,KAAK,GAAa;QACpB,WAAI,CAAC,gBAAO,EAAE,IAAI,CAAC;QACnB,GAAG,GAAG,WAAI,CAAC,gBAAO,EAAE,IAAI,EAAE,MAAM,CAAC;QACjC,GAAG,GAAG,WAAI,CAAC,gBAAO,EAAE,IAAI,EAAE,QAAQ,CAAC;KACpC,CAAC,MAAM,CAAC,mBAAU,CAAC,GAAG,CAAC,UAAC,CAAC,IAAO,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAErD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;SACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAQ,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC","sourcesContent":["import * as gulp from 'gulp';\nimport { join } from 'path';\n\nimport { APP_DEST, APP_SRC, TEMP_FILES } from '../../config';\n\n/**\n * Executes the build process, copying the assets located in `src/client` over to the appropriate\n * `dist/dev` directory.\n */\nexport = () => {\n  let paths: string[] = [\n    join(APP_SRC, '**'),\n    '!' + join(APP_SRC, '**', '*.ts'),\n    '!' + join(APP_SRC, '**', '*.scss')\n  ].concat(TEMP_FILES.map((p) => { return '!' + p; }));\n\n  return gulp.src(paths)\n    .pipe(gulp.dest(APP_DEST));\n};\n"]}