{"version":3,"file":"/home/hdthinh/wthapps/portal-frontend/tools/utils/seed/watch.ts","sources":["/home/hdthinh/wthapps/portal-frontend/tools/utils/seed/watch.ts"],"names":[],"mappings":";AAAA,IAAY,eAAe,WAAM,mBAAmB,CAAC,CAAA;AACrD,qBAAqB,MAAM,CAAC,CAAA;AAC5B,IAAY,WAAW,WAAM,cAAc,CAAC,CAAA;AAE5C,uBAAmB,cAAc,CAAC,CAAA;AAClC,kCAAkC,qBAAqB,CAAC,CAAA;AACxD,sBAAiC,aAAa,CAAC,CAAA;AAE/C,IAAM,OAAO,GAAQ,eAAe,EAAE,CAAC;AAMvC,eAAsB,QAAgB,EAAE,IAA6B;IAA7B,oBAA6B,GAA7B,OAAe,gBAAM,CAAC,OAAO;IACnE,MAAM,CAAC;QACL,IAAI,KAAK,GAAa;YACpB,WAAI,CAAC,IAAI,EAAE,IAAI,CAAC;SACjB,CAAC,MAAM,CAAC,gBAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,CAAC,IAAO,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAG5D,EAAE,CAAC,CAAC,gBAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC7B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,gBAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAC,CAAC;gBAClD,MAAM,CAAC,WAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC;QACN,CAAC;QAED,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,UAAC,CAAM;YAC1B,qCAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAMlC,UAAU,CAAC;gBAET,WAAW,CAAC,QAAQ,EAAE;oBACpB,qCAAiB,CAAC,KAAK,EAAE,CAAC;oBAC1B,wBAAgB,CAAC,CAAC,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;YAEL,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AA9Be,aAAK,QA8BpB,CAAA","sourcesContent":["import * as gulpLoadPlugins from 'gulp-load-plugins';\nimport { join } from 'path';\nimport * as runSequence from 'run-sequence';\n\nimport Config from '../../config';\nimport { changeFileManager } from './code_change_tools';\nimport { notifyLiveReload } from '../../utils';\n\nconst plugins = <any>gulpLoadPlugins();\n\n/**\n * Watches the task with the given taskname.\n * @param {string} taskname - The name of the task.\n */\nexport function watch(taskname: string, root: string = Config.APP_SRC) {\n  return function () {\n    let paths: string[] = [\n      join(root, '**')\n    ].concat(Config.TEMP_FILES.map((p) => { return '!' + p; }));\n\n    // watches for user defined paths to trigger compilation\n    if (Config.EXTRA_WATCH_PATHS) {\n      paths = paths.concat(Config.EXTRA_WATCH_PATHS.map((p) => {\n        return join(p, '**');\n      }));\n    }\n\n    plugins.watch(paths, (e: any) => {\n      changeFileManager.addFile(e.path);\n\n\n      // Resolves issue in IntelliJ and other IDEs/text editors which\n      // save multiple files at once.\n      // https://github.com/mgechev/angular-seed/issues/1615 for more details.\n      setTimeout(() => {\n\n        runSequence(taskname, () => {\n          changeFileManager.clear();\n          notifyLiveReload(e);\n        });\n\n      }, 100);\n    });\n  };\n}\n"]}