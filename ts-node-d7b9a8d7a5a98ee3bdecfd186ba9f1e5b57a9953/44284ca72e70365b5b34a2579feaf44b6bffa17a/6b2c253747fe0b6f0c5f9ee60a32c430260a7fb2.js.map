{"version":3,"file":"/home/hdthinh/wthapps/portal-frontend/tools/tasks/seed/build.bundles.ts","sources":["/home/hdthinh/wthapps/portal-frontend/tools/tasks/seed/build.bundles.ts"],"names":[],"mappings":";AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,IAAY,eAAe,WAAM,mBAAmB,CAAC,CAAA;AACrD,IAAY,KAAK,WAAM,cAAc,CAAC,CAAA;AAEtC,uBAAmB,cAAc,CAAC,CAAA;AAElC,IAAM,OAAO,GAAQ,eAAe,EAAE,CAAC;AAUvC;IACE,IAAI,IAAI,GAAG,gBAAM,CAAC,YAAY;SAC3B,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAEpC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,OAAO,EAApB,CAAoB,CAAC;SAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,MAAM,EAAnB,CAAmB,CAAC,CAAC;SAC7C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,IAAI,EAAjB,CAAiB,CAAC,CAAC;SAC3C,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,EAAL,CAAK,CAAC,CAAC;AACrB,CAAC;AAKD;IACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;SACxB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAM,CAAC,oBAAoB,CAAC,CAAC;SAEjD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gCAAgC,EAAE,cAAc,CAAC,CAAC;SACvE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AACrC,CAAC;AAxBD,iBAAS,cAAM,OAAA,KAAK,CAAC,WAAW,EAAE,CAAC,EAApB,CAAoB,CAAC","sourcesContent":["import * as gulp from 'gulp';\nimport * as gulpLoadPlugins from 'gulp-load-plugins';\nimport * as merge from 'merge-stream';\n\nimport Config from '../../config';\n\nconst plugins = <any>gulpLoadPlugins();\n\n/**\n * Executes the build process, bundling the shim files.\n */\nexport = () => merge(bundleShims());\n\n/**\n * Returns the shim files to be injected.\n */\nfunction getShims() {\n  let libs = Config.DEPENDENCIES\n    .filter(d => /\\.js$/.test(d.src));\n\n  return libs.filter(l => l.inject === 'shims')\n    .concat(libs.filter(l => l.inject === 'libs'))\n    .concat(libs.filter(l => l.inject === true))\n    .map(l => l.src);\n}\n\n/**\n * Bundles the shim files.\n */\nfunction bundleShims() {\n  return gulp.src(getShims())\n    .pipe(plugins.concat(Config.JS_PROD_SHIMS_BUNDLE))\n    // Strip the first (global) 'use strict' added by reflect-metadata, but don't strip any others to avoid unintended scope leaks.\n    .pipe(plugins.replace(/('|\")use strict\\1;var Reflect;/, 'var Reflect;'))\n    .pipe(gulp.dest(Config.JS_DEST));\n}\n"]}