{"version":3,"file":"/home/hdthinh/wthapps/portal-frontend/tools/config/seed.config.ts","sources":["/home/hdthinh/wthapps/portal-frontend/tools/config/seed.config.ts"],"names":[],"mappings":"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","sourcesContent":["import { join } from 'path';\nimport * as slash from 'slash';\nimport { argv } from 'yargs';\n\nimport { BuildType, ExtendPackages, InjectableDependency } from './seed.config.interfaces';\n\n/************************* DO NOT CHANGE ************************\n *\n * DO NOT make any changes in this file because it will\n * make your migration to newer versions of the seed harder.\n *\n * Your application-specific configurations should be\n * in project.config.ts. If you need to change any tasks\n * from \"./tasks\" overwrite them by creating a task with the\n * same name in \"./projects\". For further information take a\n * look at the documentation:\n *\n * 1) https://github.com/mgechev/angular-seed/tree/master/tools\n * 2) https://github.com/mgechev/angular-seed/wiki\n *\n *****************************************************************/\n\n/**\n * The enumeration of available environments.\n * @type {Environments}\n */\nexport const BUILD_TYPES: BuildType = {\n  DEVELOPMENT: 'dev',\n  PRODUCTION: 'prod'\n};\n\n/**\n * This class represents the basic configuration of the seed.\n * It provides the following:\n * - Constants for directories, ports, versions etc.\n * - Injectable NPM dependencies\n * - Injectable application assets\n * - Temporary editor files to be ignored by the watcher and asset builder\n * - SystemJS configuration\n * - Autoprefixer configuration\n * - BrowserSync configuration\n * - Utilities\n */\nexport class SeedConfig {\n\n  /**\n   * The port where the application will run.\n   * The default port is `5555`, which can be overriden by the  `--port` flag when running `npm start`.\n   * @type {number}\n   */\n  PORT = argv['port'] || 3000;\n\n  /**\n   * The root folder of the project (up two levels from the current directory).\n   */\n  PROJECT_ROOT = join(__dirname, '../..');\n\n  /**\n   * The current build type.\n   * The default build type is `dev`, which can be overriden by the `--build-type dev|prod` flag when running `npm start`.\n   */\n  BUILD_TYPE = getBuildType();\n\n  /**\n   * The flag for the debug option of the application.\n   * The default value is `false`, which can be overriden by the `--debug` flag when running `npm start`.\n   * @type {boolean}\n   */\n  DEBUG = argv['debug'] || false;\n\n  /**\n   * The port where the documentation application will run.\n   * The default docs port is `4003`, which can be overriden by the `--docs-port` flag when running `npm start`.\n   * @type {number}\n   */\n  DOCS_PORT = argv['docs-port'] || 4003;\n\n  /**\n   * The port where the unit test coverage report application will run.\n   * The default coverage port is `4004`, which can by overriden by the `--coverage-port` flag when running `npm start`.\n   * @type {number}\n   */\n  COVERAGE_PORT = argv['coverage-port'] || 4004;\n\n  /**\n   * The path to the coverage output\n   * NB: this must match what is configured in ./karma.conf.js\n   */\n  COVERAGE_DIR = 'coverage_js';\n  COVERAGE_TS_DIR = 'coverage';\n\n  /**\n   * The path for the base of the application at runtime.\n   * The default path is based on the environment '/',\n   * which can be overriden by the `--base` flag when running `npm start`.\n   * @type {string}\n   */\n  APP_BASE = argv['base'] || '/';\n\n  /**\n   * The base path of node modules.\n   * @type {string}\n   */\n  NPM_BASE = slash(join('.', this.APP_BASE, 'node_modules/'));\n\n  /**\n   * The build interval which will force the TypeScript compiler to perform a typed compile run.\n   * Between the typed runs, a typeless compile is run, which is typically much faster.\n   * For example, if set to 5, the initial compile will be typed, followed by 5 typeless runs,\n   * then another typed run, and so on.\n   * If a compile error is encountered, the build will use typed compilation until the error is resolved.\n   * The default value is `0`, meaning typed compilation will always be performed.\n   * @type {number}\n   */\n  TYPED_COMPILE_INTERVAL = 0;\n\n  /**\n   * The directory where the bootstrap file is located.\n   * The default directory is `app`.\n   * @type {string}\n   */\n  BOOTSTRAP_DIR = argv['app'] || 'app';\n\n  /**\n   * The directory where the client files are located.\n   * The default directory is `client`.\n   * @type {string}\n   */\n  APP_CLIENT = argv['client'] || 'client';\n\n  /**\n   * The bootstrap file to be used to boot the application.\n   * @type {string}\n   */\n  BOOTSTRAP_MODULE = `${this.BOOTSTRAP_DIR}/main`;\n\n  BOOTSTRAP_PROD_MODULE = `${this.BOOTSTRAP_DIR}/` + 'main';\n\n  NG_FACTORY_FILE = 'main-prod';\n\n  BOOTSTRAP_FACTORY_PROD_MODULE = `${this.BOOTSTRAP_DIR}/${this.NG_FACTORY_FILE}`;\n  /**\n   * The default title of the application as used in the `<title>` tag of the\n   * `index.html`.\n   * @type {string}\n   */\n  APP_TITLE = 'Welcome to angular-seed!';\n\n  /**\n   * Tracking ID.\n   * @type {string}\n   */\n  GOOGLE_ANALYTICS_ID = 'UA-XXXXXXXX-X';\n\n  /**\n   * The base folder of the applications source files.\n   * @type {string}\n   */\n  APP_SRC = `src/${this.APP_CLIENT}`;\n\n  /**\n   * The name of the TypeScript project file\n   * @type {string}\n   */\n  APP_PROJECTNAME = 'tsconfig.json';\n\n  /**\n   * The folder of the applications asset files.\n   * @type {string}\n   */\n  ASSETS_SRC = `${this.APP_SRC}/assets`;\n\n  /**\n   * The folder of the applications css files.\n   * @type {string}\n   */\n  CSS_SRC = `${this.APP_SRC}/css`;\n\n  /**\n   * The folder of the e2e specs and framework\n   */\n  E2E_SRC = 'src/e2e';\n\n  /**\n   * The folder of the applications scss files.\n   * @type {string}\n   */\n  SCSS_SRC = `${this.APP_SRC}/scss`;\n\n  /**\n   * The directory of the applications tools\n   * @type {string}\n   */\n  TOOLS_DIR = 'tools';\n\n  /**\n   * The directory of the tasks provided by the seed.\n   */\n  SEED_TASKS_DIR = join(process.cwd(), this.TOOLS_DIR, 'tasks', 'seed');\n\n  /**\n   * Seed tasks which are composition of other tasks.\n   */\n  SEED_COMPOSITE_TASKS = join(process.cwd(), this.TOOLS_DIR, 'config', 'seed.tasks.json');\n\n  /**\n   * Project tasks which are composition of other tasks\n   * and aim to override the tasks defined in\n   * SEED_COMPOSITE_TASKS.\n   */\n  PROJECT_COMPOSITE_TASKS = join(process.cwd(), this.TOOLS_DIR, 'config', 'project.tasks.json');\n\n  /**\n   * The destination folder for the generated documentation.\n   * @type {string}\n   */\n  DOCS_DEST = 'docs';\n\n  /**\n   * The base folder for built files.\n   * @type {string}\n   */\n  DIST_DIR = 'dist';\n\n  /**\n   * The folder for built files in the `dev` environment.\n   * @type {string}\n   */\n  DEV_DEST = `${this.DIST_DIR}/dev`;\n\n  /**\n   * The folder for the built files in the `prod` environment.\n   * @type {string}\n   */\n  PROD_DEST = `${this.DIST_DIR}/prod`;\n\n  /**\n   * The folder for the built files of the e2e-specs.\n   * @type {string}\n   */\n  E2E_DEST = `${this.DIST_DIR}/e2e`;\n\n  /**\n   * The folder for temporary files.\n   * @type {string}\n   */\n  TMP_DIR = `${this.DIST_DIR}/tmp`;\n\n  /**\n   * The folder for the built files, corresponding to the current environment.\n   * @type {string}\n   */\n  APP_DEST = this.BUILD_TYPE === BUILD_TYPES.DEVELOPMENT ? this.DEV_DEST : this.PROD_DEST;\n\n  /**\n   * The folder for the built CSS files.\n   * @type {strings}\n   */\n  CSS_DEST = `${this.APP_DEST}/css`;\n\n  /**\n   * The folder for the built JavaScript files.\n   * @type {string}\n   */\n  JS_DEST = `${this.APP_DEST}/js`;\n\n  /**\n   * The version of the application as defined in the `package.json`.\n   */\n  VERSION = appVersion();\n\n  /**\n   * The name of the bundle file to includes all CSS files.\n   * @type {string}\n   */\n  CSS_BUNDLE_NAME = 'main';\n\n  /**\n   * The name of the bundle file to include all JavaScript shims.\n   * @type {string}\n   */\n  JS_PROD_SHIMS_BUNDLE = 'shims.js';\n\n  /**\n   * The name of the bundle file to include all JavaScript application files.\n   * @type {string}\n   */\n  JS_PROD_APP_BUNDLE = 'app.js';\n\n  /**\n   * The required NPM version to run the application.\n   * @type {string}\n   */\n  VERSION_NPM = '2.14.2';\n\n  /**\n   * The required NodeJS version to run the application.\n   * @type {string}\n   */\n  VERSION_NODE = '4.0.0';\n\n  /**\n   * Enable SCSS stylesheet compilation.\n   * Set ENABLE_SCSS environment variable to 'true' or '1'\n   * @type {boolean}\n   */\n  ENABLE_SCSS = ['true', '1'].indexOf(`${process.env.ENABLE_SCSS}`.toLowerCase()) !== -1 || argv['scss'] || false;\n\n  /**\n   * Enable tslint emit error by setting env variable FORCE_TSLINT_EMIT_ERROR\n   * @type {boolean}\n   */\n  FORCE_TSLINT_EMIT_ERROR = !!process.env.FORCE_TSLINT_EMIT_ERROR;\n\n  /**\n   * Extra paths for the gulp process to watch for to trigger compilation.\n   * @type {string[]}\n   */\n  EXTRA_WATCH_PATHS: string[] = [];\n\n  /**\n   * The list of NPM dependcies to be injected in the `index.html`.\n   * @type {InjectableDependency[]}\n   */\n  NPM_DEPENDENCIES: InjectableDependency[] = [\n    { src: 'core-js/client/shim.min.js', inject: 'shims' },\n    { src: 'zone.js/dist/zone.js', inject: 'libs' },\n    { src: 'zone.js/dist/long-stack-trace-zone.js', inject: 'libs', buildType: BUILD_TYPES.DEVELOPMENT },\n    { src: 'intl/dist/Intl.min.js', inject: 'shims' },\n    { src: 'systemjs/dist/system.src.js', inject: 'shims', buildType: BUILD_TYPES.DEVELOPMENT },\n    // Temporary fix. See https://github.com/angular/angular/issues/9359\n    { src: '.tmp/Rx.min.js', inject: 'libs', buildType: BUILD_TYPES.DEVELOPMENT },\n  ];\n\n  /**\n   * The list of local files to be injected in the `index.html`.\n   * @type {InjectableDependency[]}\n   */\n  APP_ASSETS: InjectableDependency[] = [];\n\n  /**\n   * Returns the array of injectable dependencies (the list of local files to be injected in the `index.html`).\n   * @return {InjectableDependency[]}\n   */\n  private get _APP_ASSETS(): InjectableDependency[] {\n    return [\n      { src: `${this.CSS_SRC}/${this.CSS_BUNDLE_NAME}.${this.getInjectableStyleExtension()}`, inject: true, vendor: false },\n      ...this.APP_ASSETS,\n    ];\n  }\n\n  /**\n   * The list of editor temporary files to ignore in watcher and asset builder.\n   * @type {string[]}\n   */\n  TEMP_FILES: string[] = [\n    '**/*___jb_tmp___',\n    '**/*~',\n  ];\n\n  /**\n   * Returns the array of injectable dependencies (npm dependencies and assets).\n   * @return {InjectableDependency[]} The array of npm dependencies and assets.\n   */\n  get DEPENDENCIES(): InjectableDependency[] {\n    return normalizeDependencies(this.NPM_DEPENDENCIES.filter(filterDependency.bind(null, this.BUILD_TYPE)))\n      .concat(this._APP_ASSETS.filter(filterDependency.bind(null, this.BUILD_TYPE)));\n  }\n\n  /**\n   * The configuration of SystemJS for the `dev` environment.\n   * @type {any}\n   */\n  SYSTEM_CONFIG_DEV: any = {\n    defaultJSExtensions: true,\n    paths: {\n      [this.BOOTSTRAP_MODULE]: `${this.APP_BASE}${this.BOOTSTRAP_MODULE}`,\n      '@angular/common': 'node_modules/@angular/common/bundles/common.umd.js',\n      '@angular/compiler': 'node_modules/@angular/compiler/bundles/compiler.umd.js',\n      '@angular/core': 'node_modules/@angular/core/bundles/core.umd.js',\n      '@angular/forms': 'node_modules/@angular/forms/bundles/forms.umd.js',\n      '@angular/http': 'node_modules/@angular/http/bundles/http.umd.js',\n      '@angular/platform-browser': 'node_modules/@angular/platform-browser/bundles/platform-browser.umd.js',\n      '@angular/platform-browser-dynamic': 'node_modules/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n      '@angular/router': 'node_modules/@angular/router/bundles/router.umd.js',\n\n      '@angular/common/testing': 'node_modules/@angular/common/bundles/common-testing.umd.js',\n      '@angular/compiler/testing': 'node_modules/@angular/compiler/bundles/compiler-testing.umd.js',\n      '@angular/core/testing': 'node_modules/@angular/core/bundles/core-testing.umd.js',\n      '@angular/http/testing': 'node_modules/@angular/http/bundles/http-testing.umd.js',\n      '@angular/platform-browser/testing':\n        'node_modules/@angular/platform-browser/bundles/platform-browser-testing.umd.js',\n      '@angular/platform-browser-dynamic/testing':\n        'node_modules/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic-testing.umd.js',\n      '@angular/router/testing': 'node_modules/@angular/router/bundles/router-testing.umd.js',\n\n      'app/*': '/app/*',\n      // For test config\n      'dist/dev/*': '/base/dist/dev/*',\n      '*': 'node_modules/*'\n    },\n    packages: {\n    }\n  };\n\n  /**\n   * The configuration of SystemJS of the application.\n   * Per default, the configuration of the `dev` environment will be used.\n   * @type {any}\n   */\n  SYSTEM_CONFIG: any = this.SYSTEM_CONFIG_DEV;\n\n  /**\n   * The system builder configuration of the application.\n   * @type {any}\n   */\n  SYSTEM_BUILDER_CONFIG: any = {\n    defaultJSExtensions: true,\n    base: this.PROJECT_ROOT,\n    packageConfigPaths: [\n      join('node_modules', '*', 'package.json'),\n      join('node_modules', '@angular', '*', 'package.json')\n    ],\n    paths: {\n      // Note that for multiple apps this configuration need to be updated\n      // You will have to include entries for each individual application in\n      // `src/client`.\n      [join(this.TMP_DIR, this.BOOTSTRAP_DIR, '*')]: `${this.TMP_DIR}/${this.BOOTSTRAP_DIR}/*`,\n      'dist/tmp/node_modules/*': 'dist/tmp/node_modules/*',\n      'dist/tmp/core/*': `dist/tmp/core/*`,\n      'node_modules/*': 'node_modules/*',\n      '*': 'node_modules/*'\n    },\n    packages: {\n      '@angular/common': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/compiler': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/core/testing': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/core': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/forms': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/http': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/platform-browser': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/platform-browser-dynamic': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/router': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      'rxjs': {\n        main: 'Rx.js',\n        defaultExtension: 'js'\n      },\n      'ng2-tag-input': {\n        main: 'dist/ng2-tag-input.bundle.js',\n        format: 'cjs',\n      },\n      'ng2-material-dropdown': {\n        defaultExtension: 'js',\n        main: 'dist/ng2-dropdown.bundle.js',\n        format: 'cjs',\n      },\n      'ng2-tag-input/modules/components/tag-input.template.html': {\n        defaultJSExtension: false\n      }\n    }\n  };\n\n  /**\n   * The Autoprefixer configuration for the application.\n   * @type {Array}\n   */\n  BROWSER_LIST = [\n    'ie >= 10',\n    'ie_mob >= 10',\n    'ff >= 30',\n    'chrome >= 34',\n    'safari >= 7',\n    'opera >= 23',\n    'ios >= 7',\n    'android >= 4.4',\n    'bb >= 10'\n  ];\n\n  /**\n   * White list for CSS color guard\n   * @type {[string, string][]}\n   */\n  COLOR_GUARD_WHITE_LIST: [string, string][] = [\n  ];\n\n  /**\n   * Browser-sync middleware configurations array.\n   * @type {Array}\n   */\n  PROXY_MIDDLEWARE: any[] = [];\n\n  /**\n   * Configurations for NPM module configurations. Add to or override in project.config.ts.\n   * @type {any}\n   */\n  PLUGIN_CONFIGS: any = {};\n\n  /**\n   * Returns the configuration object for NPM module configurations.\n   */\n  private get _PLUGIN_CONFIGS(): any {\n    /**\n     * The BrowserSync configuration of the application.\n     * The default open behavior is to open the browser. To prevent the browser from opening use the `--b`  flag when\n     * running `npm start` (tested with serve.dev).\n     * Example: `npm start -- --b`\n     * @return {any}\n     */\n    let defaults = {\n      'browser-sync': {\n        middleware: [require('connect-history-api-fallback')({\n          index: `${this.APP_BASE}index.html`\n        }), ...this.PROXY_MIDDLEWARE],\n        port: this.PORT,\n        startPath: this.APP_BASE,\n        open: argv['b'] ? false : true,\n        injectChanges: false,\n        server: {\n          baseDir: `${this.DIST_DIR}/empty/`,\n          routes: {\n            [`${this.APP_BASE}${this.APP_SRC}`]: this.APP_SRC,\n            [`${this.APP_BASE}${this.APP_DEST}`]: this.APP_DEST,\n            [`${this.APP_BASE}node_modules`]: 'node_modules',\n            [`${this.APP_BASE.replace(/\\/$/, '')}`]: this.APP_DEST\n          }\n        }\n      },\n\n      // Note: you can customize the location of the file\n      'environment-config': join(this.PROJECT_ROOT, this.TOOLS_DIR, 'env'),\n\n      /**\n       * The options to pass to gulp-sass (and then to node-sass).\n       * Reference: https://github.com/sass/node-sass#options\n       * @type {object}\n       */\n      'gulp-sass': {\n        includePaths: ['./node_modules/']\n      },\n\n      /**\n       * The options to pass to gulp-concat-css\n       * Reference: https://github.com/mariocasciaro/gulp-concat-css\n       * @type {object}\n       */\n      'gulp-concat-css': {\n        targetFile: `${this.CSS_BUNDLE_NAME}.css`,\n        options: {\n          rebaseUrls: false\n        }\n      }\n    };\n\n    this.mergeObject(defaults, this.PLUGIN_CONFIGS);\n\n    return defaults;\n  }\n\n  /**\n   * Karma reporter configuration\n   */\n  getKarmaReporters(): any {\n    return {\n      preprocessors: {\n        'dist/**/!(*spec|index|*.module|*.routes).js': ['coverage']\n      },\n      reporters: ['mocha', 'coverage', 'karma-remap-istanbul'],\n      coverageReporter: {\n        dir: this.COVERAGE_DIR + '/',\n        reporters: [\n          { type: 'json', subdir: '.', file: 'coverage-final.json' },\n          { type: 'html', subdir: '.' }\n        ]\n      },\n      remapIstanbulReporter: {\n        reports: {\n          html: this.COVERAGE_TS_DIR\n        }\n      }\n    };\n  };\n\n  /**\n   * Recursively merge source onto target.\n   * @param {any} target The target object (to receive values from source)\n   * @param {any} source The source object (to be merged onto target)\n   */\n  mergeObject(target: any, source: any) {\n    const deepExtend = require('deep-extend');\n    deepExtend(target, source);\n  }\n\n  /**\n   * Locate a plugin configuration object by plugin key.\n   * @param {any} pluginKey The object key to look up in PLUGIN_CONFIGS.\n   */\n  getPluginConfig(pluginKey: string): any {\n    if (this._PLUGIN_CONFIGS[pluginKey]) {\n      return this._PLUGIN_CONFIGS[pluginKey];\n    }\n    return null;\n  }\n\n  getInjectableStyleExtension() {\n    return this.BUILD_TYPE === BUILD_TYPES.PRODUCTION && this.ENABLE_SCSS ? 'scss' : 'css';\n  }\n\n  addPackageBundles(pack: ExtendPackages) {\n\n    if (pack.path) {\n      this.SYSTEM_CONFIG_DEV.paths[pack.name] = pack.path;\n      this.SYSTEM_BUILDER_CONFIG.paths[pack.name] = pack.path;\n    }\n\n    if (pack.packageMeta) {\n      this.SYSTEM_CONFIG_DEV.packages[pack.name] = pack.packageMeta;\n      this.SYSTEM_BUILDER_CONFIG.packages[pack.name] = pack.packageMeta;\n    }\n  }\n\n  addPackagesBundles(packs: ExtendPackages[]) {\n\n    packs.forEach((pack: ExtendPackages) => {\n      this.addPackageBundles(pack);\n    });\n\n  }\n\n}\n\n/**\n * Normalizes the given `deps` to skip globs.\n * @param {InjectableDependency[]} deps - The dependencies to be normalized.\n */\nexport function normalizeDependencies(deps: InjectableDependency[]) {\n  deps\n    .filter((d: InjectableDependency) => !/\\*/.test(d.src)) // Skip globs\n    .forEach((d: InjectableDependency) => d.src = require.resolve(d.src));\n  return deps;\n}\n\n/**\n * Returns if the given dependency is used in the given environment.\n * @param  {string}               env - The environment to be filtered for.\n * @param  {InjectableDependency} d   - The dependency to check.\n * @return {boolean}                    `true` if the dependency is used in this environment, `false` otherwise.\n */\nfunction filterDependency(type: string, d: InjectableDependency): boolean {\n  const t = d.buildType || d.env;\n  d.buildType = t;\n  if (!t) {\n    d.buildType = Object.keys(BUILD_TYPES).map(k => BUILD_TYPES[k]);\n  }\n  if (!(d.buildType instanceof Array)) {\n    (<any>d).env = [d.buildType];\n  }\n  return d.buildType.indexOf(type) >= 0;\n}\n\n/**\n * Returns the applications version as defined in the `package.json`.\n * @return {number} The applications version.\n */\nfunction appVersion(): number | string {\n  var pkg = require('../../package.json');\n  return pkg.version;\n}\n\n/**\n * Returns the application build type.\n */\nfunction getBuildType() {\n  let type = (argv['build-type'] || argv['env'] || '').toLowerCase();\n  let base: string[] = argv['_'];\n  let prodKeyword = !!base.filter(o => o.indexOf(BUILD_TYPES.PRODUCTION) >= 0).pop();\n  if ((base && prodKeyword) || type === BUILD_TYPES.PRODUCTION) {\n    return BUILD_TYPES.PRODUCTION;\n  } else {\n    return BUILD_TYPES.DEVELOPMENT;\n  }\n}\n"]}