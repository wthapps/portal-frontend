{"version":3,"file":"/home/hdthinh/wthapps/portal-frontend/tools/tasks/seed/build.js.dev.ts","sources":["/home/hdthinh/wthapps/portal-frontend/tools/tasks/seed/build.js.dev.ts"],"names":[],"mappings":";;;;;;AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,IAAY,eAAe,WAAM,mBAAmB,CAAC,CAAA;AACrD,IAAY,KAAK,WAAM,cAAc,CAAC,CAAA;AACtC,IAAY,IAAI,WAAM,WAAW,CAAC,CAAA;AAClC,qBAAwC,MAAM,CAAC,CAAA;AAE/C,uBAAmB,cAAc,CAAC,CAAA;AAClC,sBAAqD,aAAa,CAAC,CAAA;AACnE,gCAA+B,oBAAoB,CAAC,CAAA;AAEpD,IAAM,OAAO,GAAQ,eAAe,EAAE,CAAC;AAEvC,IAAI,iBAAiB,GAAG,gBAAM,CAAC,sBAAsB,CAAC;AAMtD,iBACE;IAAyB,8BAAc;IAAvC;QAAyB,8BAAc;IAsDvC,CAAC;IArDC,wBAAG,GAAH;QACE,IAAI,SAAc,CAAC;QACnB,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;YACrB,gBAAM,CAAC,SAAS,GAAG,2BAA2B;SAC/C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG;YACR,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,SAAS,CAAC;YAC/B,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,cAAc,CAAC;YAC1C,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,kBAAkB,CAAC;YAC9C,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,QAAM,gBAAM,CAAC,eAAe,QAAK,CAAC;SAC9D,CAAC;QAEF,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,MAAW,CAAC;QAChB,IAAI,aAAa,GAAG,IAAI,CAAC;QAGzB,EAAE,CAAC,CAAC,iBAAiB,GAAG,gBAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACtD,aAAa,GAAG,KAAK,CAAC;YACtB,SAAS,GAAG,qBAAa,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;YACnD,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACtD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,SAAS,GAAG,qBAAa,EAAE,CAAC;YAC5B,YAAY,GAAG,KAAK,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QAC9C,CAAC;QAED,MAAM,GAAG,YAAY;aAClB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;aACvB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;aAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;aACjB,EAAE,CAAC,OAAO,EAAE;YACX,iBAAiB,GAAG,gBAAM,CAAC,sBAAsB,CAAC;QACpD,CAAC,CAAC,CAAC;QAEL,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAClB,iBAAiB,GAAG,CAAC,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,iBAAiB,EAAE,CAAC;QACtB,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,EAAE;aACb,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;aAQhC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,6BAAqB,EAAE,CAAC,8BAA8B,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;aAC5F,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpC,CAAC;IACL,iBAAC;AAAD,CAAC,AAtDD,CAAyB,gCAAc,EAsDtC,CAAC","sourcesContent":["import * as gulp from 'gulp';\nimport * as gulpLoadPlugins from 'gulp-load-plugins';\nimport * as merge from 'merge-stream';\nimport * as util from 'gulp-util';\nimport { join/*, sep, relative*/ } from 'path';\n\nimport Config from '../../config';\nimport { makeTsProject, TemplateLocalsBuilder } from '../../utils';\nimport { TypeScriptTask } from '../typescript_task';\n\nconst plugins = <any>gulpLoadPlugins();\n\nlet typedBuildCounter = Config.TYPED_COMPILE_INTERVAL; // Always start with the typed build.\n\n/**\n * Executes the build process, transpiling the TypeScript files (except the spec and e2e-spec files) for the development\n * environment.\n */\nexport =\n  class BuildJsDev extends TypeScriptTask {\n    run() {\n      let tsProject: any;\n      let typings = gulp.src([\n        Config.TOOLS_DIR + '/manual_typings/**/*.d.ts'\n      ]);\n      let src = [\n        join(Config.APP_SRC, '**/*.ts'),\n        '!' + join(Config.APP_SRC, '**/*.spec.ts'),\n        '!' + join(Config.APP_SRC, '**/*.e2e-spec.ts'),\n        '!' + join(Config.APP_SRC, `**/${Config.NG_FACTORY_FILE}.ts`)\n      ];\n\n      let projectFiles = gulp.src(src);\n      let result: any;\n      let isFullCompile = true;\n\n      // Only do a typed build every X builds, otherwise do a typeless build to speed things up\n      if (typedBuildCounter < Config.TYPED_COMPILE_INTERVAL) {\n        isFullCompile = false;\n        tsProject = makeTsProject({isolatedModules: true});\n        projectFiles = projectFiles.pipe(plugins.cached());\n        util.log('Performing typeless TypeScript compile.');\n      } else {\n        tsProject = makeTsProject();\n        projectFiles = merge(typings, projectFiles);\n      }\n\n      result = projectFiles\n        .pipe(plugins.plumber())\n        .pipe(plugins.sourcemaps.init())\n        .pipe(tsProject())\n        .on('error', () => {\n          typedBuildCounter = Config.TYPED_COMPILE_INTERVAL;\n        });\n\n      if (isFullCompile) {\n        typedBuildCounter = 0;\n      } else {\n        typedBuildCounter++;\n      }\n\n      return result.js\n        .pipe(plugins.sourcemaps.write())\n        // Use for debugging with Webstorm/IntelliJ\n        // https://github.com/mgechev/angular-seed/issues/1220\n        //    .pipe(plugins.sourcemaps.write('.', {\n        //      includeContent: false,\n        //      sourceRoot: (file: any) =>\n        //        relative(file.path, Config.PROJECT_ROOT + '/' + Config.APP_SRC).replace(sep, '/') + '/' + Config.APP_SRC\n        //    }))\n        .pipe(plugins.template(new TemplateLocalsBuilder().withStringifiedSystemConfigDev().build()))\n        .pipe(gulp.dest(Config.APP_DEST));\n      }\n  };\n\n"]}